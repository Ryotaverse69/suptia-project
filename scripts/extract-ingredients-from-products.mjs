/**
 * Êó¢Â≠òÂïÜÂìÅ„Åã„ÇâÊàêÂàÜ„ÇíÊäΩÂá∫„Åó„Å¶ÂàÜÊûê„Åô„Çã„Çπ„ÇØ„É™„Éó„Éà
 */

import { createClient } from "@sanity/client";
import { readFileSync, writeFileSync } from "fs";
import { fileURLToPath } from "url";
import { dirname, join } from "path";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Áí∞Â¢ÉÂ§âÊï∞Ë™≠„ÅøËæº„Åø
const envPath = join(__dirname, "../apps/web/.env.local");
const envContent = readFileSync(envPath, "utf8");

const SANITY_API_TOKEN = envContent
  .match(/SANITY_API_TOKEN=(.+)/)?.[1]
  ?.trim();

if (!SANITY_API_TOKEN) {
  console.error("‚ùå SANITY_API_TOKEN „ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì");
  process.exit(1);
}

// SanityË®≠ÂÆö
const SANITY_PROJECT_ID = "fny3jdcg";
const SANITY_DATASET = "production";

const client = createClient({
  projectId: SANITY_PROJECT_ID,
  dataset: SANITY_DATASET,
  apiVersion: "2024-01-01",
  token: SANITY_API_TOKEN,
  useCdn: false,
});

// ÊàêÂàÜ„Ç≠„Éº„ÉØ„Éº„Éâ„Éû„ÉÉ„Éó
const INGREDIENT_KEYWORDS = [
  { keywords: ["„Éì„Çø„Éü„É≥c", "vitamin c", "„Ç¢„Çπ„Ç≥„É´„Éì„É≥ÈÖ∏"], slug: "vitamin-c", name: "„Éì„Çø„Éü„É≥C" },
  { keywords: ["„Éì„Çø„Éü„É≥d", "vitamin d"], slug: "vitamin-d", name: "„Éì„Çø„Éü„É≥D" },
  { keywords: ["„Éì„Çø„Éü„É≥e", "vitamin e", "„Éà„Ç≥„Éï„Çß„É≠„Éº„É´"], slug: "vitamin-e", name: "„Éì„Çø„Éü„É≥E" },
  { keywords: ["„Éì„Çø„Éü„É≥a", "vitamin a", "„É¨„ÉÅ„Éé„Éº„É´", "Œ≤„Ç´„É≠„ÉÜ„É≥", "„Éô„Éº„Çø„Ç´„É≠„ÉÜ„É≥"], slug: "vitamin-a", name: "„Éì„Çø„Éü„É≥A" },
  { keywords: ["„Éì„Çø„Éü„É≥b", "vitamin b", "„Éä„Ç§„Ç¢„Ç∑„É≥", "„Éë„É≥„Éà„ÉÜ„É≥"], slug: "vitamin-b-complex", name: "„Éì„Çø„Éü„É≥BÁæ§" },
  { keywords: ["dha", "epa", "„Ç™„É°„Ç¨3", "omega-3", "omega3", "„Éï„Ç£„ÉÉ„Ç∑„É•„Ç™„Ç§„É´"], slug: "dha-epa", name: "DHA„ÉªEPA" },
  { keywords: ["ËëâÈÖ∏", "folic", "folate"], slug: "folic-acid", name: "ËëâÈÖ∏" },
  { keywords: ["„Éû„Ç∞„Éç„Ç∑„Ç¶„É†", "magnesium"], slug: "magnesium", name: "„Éû„Ç∞„Éç„Ç∑„Ç¶„É†" },
  { keywords: ["„Ç´„É´„Ç∑„Ç¶„É†", "calcium"], slug: "calcium", name: "„Ç´„É´„Ç∑„Ç¶„É†" },
  { keywords: ["ÈâÑ", "iron", "„Éò„É†ÈâÑ", "Èùû„Éò„É†ÈâÑ"], slug: "iron", name: "ÈâÑ" },
  { keywords: ["‰∫úÈâõ", "zinc"], slug: "zinc", name: "‰∫úÈâõ" },
  { keywords: ["„Éó„É≠„ÉÜ„Ç§„É≥", "protein", "„Åü„Çì„Å±„ÅèË≥™", "„Çø„É≥„Éë„ÇØË≥™"], slug: "protein", name: "„Éó„É≠„ÉÜ„Ç§„É≥" },
  { keywords: ["„Ç≥„É©„Éº„Ç≤„É≥", "collagen"], slug: "collagen", name: "„Ç≥„É©„Éº„Ç≤„É≥" },
  { keywords: ["‰π≥ÈÖ∏Ëèå", "lactobacillus", "„Éó„É≠„Éê„Ç§„Ç™„ÉÜ„Ç£„ÇØ„Çπ", "probiotics", "„Éì„Éï„Ç£„Ç∫„ÇπËèå"], slug: "probiotics", name: "‰π≥ÈÖ∏Ëèå" },
];

async function main() {
  console.log("üîç Êó¢Â≠òÂïÜÂìÅ„ÇíÂèñÂæó‰∏≠...\n");

  // ÊàêÂàÜ„Éá„Éº„Çø„Åå„Å™„ÅÑÂïÜÂìÅ„ÇíÂèñÂæó
  const products = await client.fetch(`
    *[_type == "product" && !defined(ingredients)] | order(_createdAt desc) {
      _id,
      name,
      slug,
      brandName,
      priceJPY,
      allIngredients,
      description
    }
  `);

  console.log(`‚úÖ ${products.length}‰ª∂„ÅÆÂïÜÂìÅ„ÇíÂèñÂæó„Åó„Åæ„Åó„Åü\n`);
  console.log("üìä ÂïÜÂìÅÂàÜÊûê‰∏≠...\n");

  const productAnalysis = [];
  let totalWithIngredients = 0;
  let totalIngredients = 0;

  for (const product of products) {
    const productName = (product.name || "").toLowerCase();
    const allIngredientsText = (product.allIngredients || "").toLowerCase();
    const descriptionText = (product.description || "").toLowerCase();

    const detectedIngredients = [];

    for (const { keywords, slug, name } of INGREDIENT_KEYWORDS) {
      const isDetected = keywords.some(
        (keyword) =>
          productName.includes(keyword.toLowerCase()) ||
          allIngredientsText.includes(keyword.toLowerCase()) ||
          descriptionText.includes(keyword.toLowerCase())
      );

      if (isDetected) {
        detectedIngredients.push({ slug, name });
      }
    }

    if (detectedIngredients.length > 0) {
      totalWithIngredients++;
      totalIngredients += detectedIngredients.length;

      console.log(`‚úÖ ${(product.name || "‰∏çÊòé").substring(0, 60)}`);
      console.log(`   Ê§úÂá∫„Åï„Çå„ÅüÊàêÂàÜ (${detectedIngredients.length}‰ª∂): ${detectedIngredients.map(i => i.name).join(", ")}`);
    }

    productAnalysis.push({
      id: product._id,
      name: product.name || "‰∏çÊòé",
      slug: product.slug?.current || "unknown",
      brand: product.brandName || "‰∏çÊòé",
      price: product.priceJPY || 0,
      detectedIngredients,
    });
  }

  console.log("\n" + "=".repeat(80));
  console.log("üìà Áµ±Ë®à:");
  console.log(`   ÂÖ®ÂïÜÂìÅÊï∞: ${products.length}‰ª∂`);
  console.log(`   ÊàêÂàÜÊ§úÂá∫„Åï„Çå„ÅüÂïÜÂìÅ: ${totalWithIngredients}‰ª∂`);
  const percentage = products.length > 0 ? Math.round((totalWithIngredients / products.length) * 100) : 0;
  console.log(`   Ê§úÂá∫Áéá: ${percentage}%`);
  console.log(`   Ê§úÂá∫„Åï„Çå„ÅüÊàêÂàÜÁ∑èÊï∞: ${totalIngredients}‰ª∂`);
  const avgIngredients = totalWithIngredients > 0 ? (totalIngredients / totalWithIngredients).toFixed(1) : 0;
  console.log(`   Âπ≥ÂùáÊàêÂàÜÊï∞/ÂïÜÂìÅ: ${avgIngredients}‰ª∂`);
  console.log("=".repeat(80));

  // JSON„Éï„Ç°„Ç§„É´„Å´‰øùÂ≠ò
  const outputPath = join(__dirname, "product-ingredient-mapping.json");
  writeFileSync(outputPath, JSON.stringify(productAnalysis, null, 2), "utf8");
  console.log(`\nüíæ ÂàÜÊûêÁµêÊûú„Çí‰øùÂ≠ò„Åó„Åæ„Åó„Åü: ${outputPath}`);
  console.log(`\nÊ¨°„ÅÆ„Çπ„ÉÜ„ÉÉ„Éó: „Åì„ÅÆÁµêÊûú„ÇíÂÖÉ„Å´ÊàêÂàÜ„Éá„Éº„Çø„Çí‰∏ÄÊã¨ËøΩÂä†„Åó„Åæ„Åô`);
}

main().catch((error) => {
  console.error("‚ùå „Ç®„É©„Éº:", error);
  process.exit(1);
});
