/**
 * ÊàêÂàÜ„Éá„Éº„Çø„ÅåÊ≠£„Åó„ÅèËøΩÂä†„Åï„Çå„Åü„ÅãÁ¢∫Ë™ç„Åô„Çã„Çπ„ÇØ„É™„Éó„Éà
 */

import { createClient } from "@sanity/client";
import { readFileSync } from "fs";
import { fileURLToPath } from "url";
import { dirname, join } from "path";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Áí∞Â¢ÉÂ§âÊï∞Ë™≠„ÅøËæº„Åø
const envPath = join(__dirname, "../apps/web/.env.local");
const envContent = readFileSync(envPath, "utf8");

const SANITY_API_TOKEN = envContent
  .match(/SANITY_API_TOKEN=(.+)/)?.[1]
  ?.trim();

if (!SANITY_API_TOKEN) {
  console.error("‚ùå SANITY_API_TOKEN „ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì");
  process.exit(1);
}

// SanityË®≠ÂÆö
const SANITY_PROJECT_ID = "fny3jdcg";
const SANITY_DATASET = "production";

const client = createClient({
  projectId: SANITY_PROJECT_ID,
  dataset: SANITY_DATASET,
  apiVersion: "2024-01-01",
  token: SANITY_API_TOKEN,
  useCdn: false,
});

async function main() {
  console.log("üîç ÊàêÂàÜ„Éá„Éº„Çø„ÅåËøΩÂä†„Åï„Çå„ÅüÂïÜÂìÅ„ÇíÁ¢∫Ë™ç‰∏≠...\n");

  const products = await client.fetch(`
    *[_type == "product" && defined(ingredients)] {
      _id,
      name,
      slug,
      brandName,
      priceJPY,
      "ingredientCount": count(ingredients),
      ingredients[]{
        amountMgPerServing,
        ingredient->{
          _id,
          name,
          slug
        }
      }
    }
  `);

  console.log(`‚úÖ ${products.length}‰ª∂„ÅÆÂïÜÂìÅ„Å´ÊàêÂàÜ„Éá„Éº„Çø„ÅåÂê´„Åæ„Çå„Å¶„ÅÑ„Åæ„Åô\n`);

  for (const product of products) {
    console.log("=".repeat(80));
    console.log(`ÂïÜÂìÅ: ${product.name || "‰∏çÊòé"}`);
    console.log(`ID: ${product._id}`);
    console.log(`slug: ${product.slug?.current || "„Å™„Åó"}`);
    console.log(`„Éñ„É©„É≥„Éâ: ${product.brandName || "‰∏çÊòé"}`);
    console.log(`‰æ°Ê†º: ${product.priceJPY ? "¬•" + product.priceJPY.toLocaleString() : "„Å™„Åó"}`);
    console.log(`\nÊàêÂàÜ„Éá„Éº„Çø (${product.ingredientCount}‰ª∂):`);

    for (const ing of product.ingredients) {
      console.log(`  - ${ing.ingredient?.name || "‰∏çÊòé"} (${ing.ingredient?.slug?.current || "‰∏çÊòé"})`);
      console.log(`    Âê´ÊúâÈáè: ${ing.amountMgPerServing}mg/Âõû`);
    }

    console.log("");
  }

  console.log("=".repeat(80));
  console.log("\n‚úÖ Á¢∫Ë™çÂÆå‰∫Ü");
  console.log("\nÊ¨°„ÅÆ„Çπ„ÉÜ„ÉÉ„Éó:");
  console.log("  ‰ª•‰∏ã„ÅÆURL„ÅßÂïÜÂìÅ„Éö„Éº„Ç∏„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ:");
  for (const product of products) {
    if (product.slug?.current) {
      console.log(`  http://localhost:3001/products/${product.slug.current}`);
    }
  }
}

main().catch((error) => {
  console.error("‚ùå „Ç®„É©„Éº:", error);
  process.exit(1);
});
