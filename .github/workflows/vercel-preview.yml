name: Vercel Preview Deployment

on:
  push:
    branches: [dev]
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]

concurrency:
  group: vercel-preview-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

jobs:
  # dev „Éñ„É©„É≥„ÉÅ„Éó„ÉÉ„Ç∑„É•ÊôÇ„ÅÆÁ¢∫ÂÆü„Å™PreviewÂèñÂæó
  dev-preview:
    name: dev-preview
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    outputs:
      preview_url: ${{ steps.ensure-preview.outputs.preview_url }}
      deployment_id: ${{ steps.ensure-preview.outputs.deployment_id }}
      deployment_ready: ${{ steps.ensure-preview.outputs.deployment_ready }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Ensure Vercel Preview Deployment
        id: ensure-preview
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: node scripts/ensure-vercel-preview.mjs

      - name: Upload Preview Result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vercel-preview-result-dev
          path: vercel-preview-result.json
          retention-days: 7

      - name: Notify Success
        if: steps.ensure-preview.outputs.deployment_ready == 'true'
        run: |
          echo "üöÄ Preview deployment successful!"
          echo "Preview URL: ${{ steps.ensure-preview.outputs.preview_url }}"
          echo "Deployment ID: ${{ steps.ensure-preview.outputs.deployment_id }}"

      - name: Notify Failure
        if: failure()
        run: |
          echo "‚ùå Preview deployment failed!"
          echo "Check the logs above for details."

  # PR‰ΩúÊàê/Êõ¥Êñ∞ÊôÇ„ÅÆPreviewÂèñÂæó
  pr-preview:
    name: pr-preview
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.event_name == 'pull_request'
    outputs:
      preview_url: ${{ steps.ensure-preview.outputs.preview_url }}
      deployment_id: ${{ steps.ensure-preview.outputs.deployment_id }}
      deployment_ready: ${{ steps.ensure-preview.outputs.deployment_ready }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Wait for Vercel Auto-deployment
        run: |
          echo "Waiting 60 seconds for Vercel to auto-deploy..."
          sleep 60

      - name: Ensure Vercel Preview Deployment
        id: ensure-preview
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          GITHUB_SHA: ${{ github.event.pull_request.head.sha }}
          GITHUB_REF_NAME: ${{ github.head_ref }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: node scripts/ensure-vercel-preview.mjs

      - name: Comment Preview URL on PR
        if: steps.ensure-preview.outputs.deployment_ready == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PREVIEW_URL: ${{ steps.ensure-preview.outputs.preview_url }}
          DEPLOYMENT_ID: ${{ steps.ensure-preview.outputs.deployment_id }}
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "$(cat <<EOF
üîç **Preview Environment Ready**

Preview URL: $PREVIEW_URL
Deployment ID: \`$DEPLOYMENT_ID\`
Commit: \`${{ github.event.pull_request.head.sha }}\`

You can now review the changes in the preview environment before merging to production.

---
*This comment was automatically generated by the Vercel Preview workflow.*
EOF
)"

      - name: Upload Preview Result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vercel-preview-result-pr-${{ github.event.pull_request.number }}
          path: vercel-preview-result.json
          retention-days: 7

  # Preview URLÊ§úË®º„ÉÜ„Çπ„Éà
  preview-validation:
    name: preview-validation
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [dev-preview]
    if: needs.dev-preview.outputs.deployment_ready == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Validate Preview URL
        env:
          PREVIEW_URL: ${{ needs.dev-preview.outputs.preview_url }}
        run: |
          echo "üîç Validating Preview URL: $PREVIEW_URL"
          
          # URL„ÅÆÂøúÁ≠îÁ¢∫Ë™ç
          if curl -f -s -o /dev/null "$PREVIEW_URL"; then
            echo "‚úÖ Preview URL is accessible"
          else
            echo "‚ùå Preview URL is not accessible"
            exit 1
          fi
          
          # Âü∫Êú¨ÁöÑ„Å™„Ç≥„É≥„ÉÜ„É≥„ÉÑÁ¢∫Ë™ç
          if curl -s "$PREVIEW_URL" | grep -q "Suptia"; then
            echo "‚úÖ Preview contains expected content"
          else
            echo "‚ö†Ô∏è Preview may not contain expected content"
          fi

      - name: Run Basic Health Check
        env:
          PREVIEW_URL: ${{ needs.dev-preview.outputs.preview_url }}
        run: |
          # Âü∫Êú¨ÁöÑ„Å™„Éò„É´„Çπ„ÉÅ„Çß„ÉÉ„ÇØ
          echo "üè• Running health check on Preview URL..."
          
          # „Çπ„ÉÜ„Éº„Çø„Çπ„Ç≥„Éº„ÉâÁ¢∫Ë™ç
          STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$PREVIEW_URL")
          if [ "$STATUS_CODE" = "200" ]; then
            echo "‚úÖ Health check passed (Status: $STATUS_CODE)"
          else
            echo "‚ö†Ô∏è Health check warning (Status: $STATUS_CODE)"
          fi
          
          # „É¨„Çπ„Éù„É≥„ÇπÊôÇÈñìÁ¢∫Ë™ç
          RESPONSE_TIME=$(curl -s -o /dev/null -w "%{time_total}" "$PREVIEW_URL")
          echo "‚è±Ô∏è Response time: ${RESPONSE_TIME}s"
          
          if (( $(echo "$RESPONSE_TIME < 5.0" | bc -l) )); then
            echo "‚úÖ Response time is acceptable"
          else
            echo "‚ö†Ô∏è Response time is slow"
          fi

  # Â§±ÊïóÊôÇ„ÅÆË®∫Êñ≠
  preview-diagnosis:
    name: preview-diagnosis
    runs-on: ubuntu-latest
    timeout-minutes: 8
    if: failure() && (needs.dev-preview.result == 'failure' || needs.pr-preview.result == 'failure')
    needs: [dev-preview, pr-preview]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run Vercel Preview Diagnosis
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: node scripts/diagnose-vercel-preview.mjs

      - name: Upload Diagnosis Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vercel-preview-diagnosis
          path: vercel-preview-diagnosis.json
          retention-days: 30

      - name: Create Issue on Repeated Failures
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # ÈÅéÂéª24ÊôÇÈñì„ÅÆÂ§±ÊïóÂõûÊï∞„Çí„ÉÅ„Çß„ÉÉ„ÇØÔºàÁ∞°ÊòìÁâàÔºâ
          RECENT_FAILURES=$(gh run list --workflow="Vercel Preview Deployment" --status=failure --limit=5 --json conclusion | jq length)
          
          if [ "$RECENT_FAILURES" -ge "3" ]; then
            echo "üö® Multiple preview deployment failures detected"
            
            ISSUE_BODY="$(cat <<EOF
**Vercel Preview Deployment Failures**

Multiple preview deployment failures have been detected in the last 24 hours.

**Details:**
- Failed workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
- Commit: \`${{ github.sha }}\`
- Branch: \`${{ github.ref_name }}\`
- Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')

**Possible Causes:**
- Vercel API token issues
- Project configuration problems
- Network connectivity issues
- Build failures

**Next Steps:**
1. Check Vercel dashboard for deployment status
2. Verify GitHub Secrets (VERCEL_TOKEN, VERCEL_PROJECT_ID)
3. Review diagnosis report in workflow artifacts
4. Check vercel.json configuration

**Diagnosis Report:** Available in workflow artifacts
EOF
)"
            
            gh issue create \
              --title "üö® Vercel Preview Deployment Failures - $(date '+%Y-%m-%d')" \
              --body "$ISSUE_BODY" \
              --label "deployment,vercel,bug,urgent" \
              --assignee "${{ github.actor }}" || echo "Failed to create issue"
          fi